* completed

** DONE Add application codec to base pipeline

** DONE Add application router to http pipeline

** DONE handle keep alive

** DONE handle content type

** DONE Add route applicator to http pipeline

** DONE Wrap Http/2 Request/Response objects

*** DONE Wrap Http2Headers

*** DONE Http2ServerCodec

*** DONE Http2ClientCodec

** DONE Update proxy to use application request object

* on deck

** TODO Refactor Http1Headers and Http2Headers to use java8 interface default methods

** Authorization uses route pipeline

** Http1ServerCodec sets response Transfer-Encoding
   https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding

** Http1ServerCodec sets Content-Length for FullResponse
   https://tools.ietf.org/html/rfc7230#section-3.3.2

** How to handle http 100 Continue?

** Update WAF to use application request object

* backlog

** connection pool that is optimized to worker loop allocation
   for a worker loop group of size N create at least N connections to the remote endpoint

** get rid of jetty helpers, replace them with MockWebServer

** setup errorprone
   https://github.com/square/okhttp/blob/master/pom.xml#L148

** document how to write a netty handler

*** it's ok to throw exceptions

*** use ChannelFuture's cause() to catch exceptions

** document immutable object testing concepts
#+begin_src java
public class ClassUnderTest {
  private final Value value;
  public ClassUnderTest(Value v) {
    value = preconditions.notNull(v);
  }
}
#+end_src

* re-file

** todo.md
   - Create default implementations for each of the most important interfaces

   - Add better tests around config

   - Add better testing around client failure modes

   - Add full HttpParser for BBtoHttpResponse

** config

*** TLS - startup configurable

**** TODO Load from Typesafe Config, attach to XioServerConfig

*** Circuit Breakers - runtime configurable

*** Ip Address - runtime configurable

    * Config Class: IpAddressDeterministicRuleEngineConfig
    * Marshall Classes: ThriftMarshaller / ThriftUnmarshaller

**** DONE Define Config class

**** DONE Define Marshall classes

*** Host Address - runtime configurable

    * Config Class: HostnameDeterministicRuleEngineConfig
    * Marshall Classes: ThriftMarshaller / ThriftUnmarshaller

**** DONE Define Config class

**** DONE Define Marshall classes

*** Layer 4 Behavioral - runtime configurable

    * Config Class:

**** TODO Define Config class

*** Application Codec - startup configurable

**** TODO Load from Typesafe Config

*** Aggregation & Compression - startup configurable

**** TODO Load from Typesafe Config

*** Decode Token - startup configurable

**** TODO Load from Typesafe Config

*** Http1 Rules - runtime configurable

    * Config Class: Http1DeterministicRuleEngineConfig
    * Marshall Classes: ThriftMarshaller / ThriftUnmarshaller

**** DONE Define Config class

**** DONE Define Marshall classes

*** Layer 7 Behavioral - runtime configurable

**** TODO Define Config class

*** Multiplex Req - startup configurable

**** TODO Load from Typesafe Config

*** Persistent Connection Manager - startup configurable

**** TODO Load from Typesafe Config
