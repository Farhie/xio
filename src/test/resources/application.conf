xio {

  testApplication = ${xio.applicationTemplate} {
    name = "test application"
    servers {
      testServer = ${xio.serverTemplate} {
        name = "test server"
        settings {
          bindPort = 0
        }
      }
    }
    settings {
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
    clients {
      testClient = ${xio.clientTemplate} {
        name = "test client"
      }
    }
  }

  exampleServer = ${xio.serverTemplate} {
    name = "example"
    settings {
      bindPort = 0
      useMessageLogger = true
    }
  }

  h1TestClient = ${xio.clientTemplate} {
    name = "test client"
    settings {
      tls {
        alpn {
          supportedProtocols = [
            "http/1.1"
          ]
        }
      }
    }
  }

  h2TestClient = ${xio.clientTemplate} {
    name = "test client"
  }


  testServer = ${xio.serverTemplate} {
    name = "test"
    settings {
      bindPort = 0
      useMessageLogger = true
    }
  }

  exampleApplication = ${xio.applicationTemplate} {
    name = "example application"
    servers {
      exampleServer = ${xio.serverTemplate} {
        name = "example server"
        settings {
          bindPort = 0
        }
      }
    }
    settings {
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
  }

  proxyApplication = ${xio.applicationTemplate} {
    name = "proxy application"
    settings {
      zookeeper {
        cluster = ""
      }
    }
    servers {
      proxyServer = ${xio.serverTemplate} {
        name = "proxy server"
        settings {
          bindPort = 0
        }
      }
    }
  }

  servers = [
    ${xio.exampleServer}
  ]

  testHttpServer = ${xio.serverTemplate} {
    name = "testHttpServer"
    settings {
      bindPort = 0
      tls {
        useSsl = false
        logInsecureConfig = false
      }
    }
  }

  testGrpcServer = ${xio.serverTemplate} {
    name = "testGrpcServer"
    settings {
      bindPort = 0
      messageLoggerEnabled = true
    }
  }

  testHttpsServer = ${xio.serverTemplate} {
    name = "testHttpsServer"
    settings {
      bindPort = 0
    }
  }

  testEchoServer = ${xio.serverTemplate} {
    name = "testEchoServer"
    settings {
      bindPort = 0
      tls {
        useSsl = false
        logInsecureConfig = false
      }
    }
  }

  testTcpProxyServer = ${xio.serverTemplate} {
    name = "testTcpProxyServer"
    settings {
      bindPort = 0
      tls {
        useSsl = false
        logInsecureConfig = false
      }
    }
  }

  h1ReverseProxy = ${xio.applicationTemplate} {
    name = "test application"
    settings {
      zookeeper {
        cluster = ""
      }
    }
    servers {
      main = ${xio.serverTemplate} {
        name = "test server"
        settings {
          bindPort = 0
          tls {
            alpn {
              supportedProtocols = [
                "http/1.1"
              ]
            }
          }
        }
      }
    }
    clients {
      main = ${xio.clientTemplate} {
        name = "test client"
      }
    }
  }

  h2ReverseProxy = ${xio.applicationTemplate} {
    name = "test application"
    settings {
      zookeeper {
        cluster = ""
      }
    }
    servers {
      main = ${xio.serverTemplate} {
        name = "test server"
        settings {
          bindPort = 0
          tls {
            alpn {
              supportedProtocols = [
                "h2"
              ]
            }
          }
        }
      }
    }
    clients {
      main = ${xio.clientTemplate} {
        name = "test client"
      }
    }
  }

  h1BackendServer = ${xio.serverTemplate} {
    name = "testHttpsServer"
    settings {
      bindPort = 0
      tls {
        alpn {
          supportedProtocols = [
            "http/1.1"
          ]
        }
      }
    }
  }

  h2BackendServer = ${xio.serverTemplate} {
    name = "testHttpsServer"
    settings {
      bindPort = 0
      tls {
        alpn {
          supportedProtocols = [
            "h2"
          ]
        }
      }
    }
  }

}
